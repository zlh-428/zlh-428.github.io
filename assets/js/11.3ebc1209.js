(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{490:function(s,e,v){"use strict";v.r(e);var a=v(7),_=Object(a.a)({},(function(){var s=this,e=s.$createElement,v=s._self._c||e;return v("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[v("h2",{attrs:{id:"tcp三次握手"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#tcp三次握手"}},[s._v("#")]),s._v(" TCP三次握手")]),s._v(" "),v("p",[s._v("传输控制协议TCP，Transmission Control Protocol是一种面向连接的、可靠的、基于字节流的传输层通信协议，其是运行在OSI七层模型中的运输层，为了在不可靠的互联网络上提供可靠的端到端字节流而专门设计的一个传输协议。")]),s._v(" "),v("h2",{attrs:{id:"三次握手"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#三次握手"}},[s._v("#")]),s._v(" 三次握手")]),s._v(" "),v("h3",{attrs:{id:"过程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#过程"}},[s._v("#")]),s._v(" 过程")]),s._v(" "),v("div",{staticClass:"language- line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[s._v("lient                                      server\n主动打开 →          SYN=1,seq=x          → 被动打开，接收\n(同步已发送)                               (同步收到)\n接收     ←   SYN=1,ACK=1,seq=y,ack=x+1   ← 发送\n(已建立链接)                               (同步收到)\n发送     →      ACK=1,seq=x+1,ack=y+1    →  接收\n(已建立链接)                               (已建立链接)\n")])]),s._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[s._v("1")]),v("br"),v("span",{staticClass:"line-number"},[s._v("2")]),v("br"),v("span",{staticClass:"line-number"},[s._v("3")]),v("br"),v("span",{staticClass:"line-number"},[s._v("4")]),v("br"),v("span",{staticClass:"line-number"},[s._v("5")]),v("br"),v("span",{staticClass:"line-number"},[s._v("6")]),v("br"),v("span",{staticClass:"line-number"},[s._v("7")]),v("br")])]),v("ol",[v("li",[s._v("第一次握手：客户端主动链接服务器，发送初始序列号"),v("code",[s._v("seq=x")]),s._v("与"),v("code",[s._v("SYN=1")]),s._v("同步请求标志，并进入同步已发送"),v("code",[s._v("SYN_SENT")]),s._v("状态，等待服务器确认。")]),s._v(" "),v("li",[s._v("第二次握手：服务端收到消息后发送确认标志"),v("code",[s._v("ACK=1")]),s._v("与同步请求标志"),v("code",[s._v("SYN=1")]),s._v("，发送自己的序列号"),v("code",[s._v("seq=y")]),s._v("以及客户端确认序号"),v("code",[s._v("ack=x+1")]),s._v("，此时服务器进入同步收到"),v("code",[s._v("SYN_RECV")]),s._v("状态。")]),s._v(" "),v("li",[s._v("第三次握手：客户端收到消息后发送确认标志"),v("code",[s._v("ACK=1")]),s._v("，发送自己的序列号"),v("code",[s._v("seq=x+1")]),s._v("与服务器确认号"),v("code",[s._v("ack=y+1")]),s._v("，发送过后即确认链接已建立状态"),v("code",[s._v("ESTABLISHED")]),s._v("，服务端接收确认信息后进入链接已建立状态"),v("code",[s._v("ESTABLISHED")])])]),s._v(" "),v("h3",{attrs:{id:"小解释"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#小解释"}},[s._v("#")]),s._v(" 小解释")]),s._v(" "),v("ol",[v("li",[v("p",[s._v("第一")])]),s._v(" "),v("li",[v("p",[s._v("第一次握手：客户端：“兄弟，待会咱们出去玩吧，能看到我的消息吗，能就吱一声，让我知道我有发消息的能力”")])]),s._v(" "),v("li",[v("p",[s._v("第二次握手：服务端：“吱，走走走咱们去哪玩？我收到你的消息了，你有发消息的能力，要不你再给我回个消息，让我也确定我有发消息的能力”")])]),s._v(" "),v("li",[v("p",[s._v("第三次握手：客户端：“咱们先去河里摸鱼玩，然后上山摘点果子。我也收到你的消息了，你这发消息的能力也没问题，咱俩的发消息的能力都没问题，可以愉快的玩耍了”")])])]),s._v(" "),v("div",{staticClass:"language- line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[s._v("双方要连接，要等待对端同意并返回确认，一端请求后收到确认包就意味着，网络可达并且对端同意建立连接。最后的模型则是\n\nA  --请求--\x3e  B\n\nA  <--确认--  B\n\nA  <--请求--  B\n\nA  --确认--\x3e  B\n\n中间两次可以一起返回，所以是三次握手\n")])]),s._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[s._v("1")]),v("br"),v("span",{staticClass:"line-number"},[s._v("2")]),v("br"),v("span",{staticClass:"line-number"},[s._v("3")]),v("br"),v("span",{staticClass:"line-number"},[s._v("4")]),v("br"),v("span",{staticClass:"line-number"},[s._v("5")]),v("br"),v("span",{staticClass:"line-number"},[s._v("6")]),v("br"),v("span",{staticClass:"line-number"},[s._v("7")]),v("br"),v("span",{staticClass:"line-number"},[s._v("8")]),v("br"),v("span",{staticClass:"line-number"},[s._v("9")]),v("br"),v("span",{staticClass:"line-number"},[s._v("10")]),v("br"),v("span",{staticClass:"line-number"},[s._v("11")]),v("br")])]),v("h2",{attrs:{id:"四次挥手"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#四次挥手"}},[s._v("#")]),s._v(" 四次挥手")]),s._v(" "),v("h3",{attrs:{id:"过程-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#过程-2"}},[s._v("#")]),s._v(" 过程")]),s._v(" "),v("div",{staticClass:"language- line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[s._v("client                                      server\n主动关闭 →          FIN=1,seq=u          → 被动关闭，接收\n(终止等待1)                               (关闭等待)\n接收     ←      ACK=1,seq=v,ack=u+1      ← 发送\n(终止等待2)                               (关闭等待)\n接收     ←   FIN=1,ACK=1,seq=w,ack=u+1   ← 发送\n(时间等待)                                (最后确认)\n发送     →      ACK=1,seq=u+1,ack=w+1    → 接收\n(时间等待 2MSL 关闭)                      (关闭)\n\n")])]),s._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[s._v("1")]),v("br"),v("span",{staticClass:"line-number"},[s._v("2")]),v("br"),v("span",{staticClass:"line-number"},[s._v("3")]),v("br"),v("span",{staticClass:"line-number"},[s._v("4")]),v("br"),v("span",{staticClass:"line-number"},[s._v("5")]),v("br"),v("span",{staticClass:"line-number"},[s._v("6")]),v("br"),v("span",{staticClass:"line-number"},[s._v("7")]),v("br"),v("span",{staticClass:"line-number"},[s._v("8")]),v("br"),v("span",{staticClass:"line-number"},[s._v("9")]),v("br"),v("span",{staticClass:"line-number"},[s._v("10")]),v("br")])]),v("ol",[v("li",[s._v("第一次挥手：客户端发出释放标识"),v("code",[s._v("FIN=1")]),s._v("，自己的序列号"),v("code",[s._v("seq=u")]),s._v("，进入终止等待"),v("code",[s._v("FIN-WAIT-1")]),s._v("状态")]),s._v(" "),v("li",[s._v("第二次挥手：服务端收到消息后发出"),v("code",[s._v("ACK=1")]),s._v("确认标志和客户端的确认号"),v("code",[s._v("ack=u+1")]),s._v("，自己的序列号"),v("code",[s._v("seq=v")]),s._v("，进入关闭等待"),v("code",[s._v("CLOSE-WAIT")]),s._v("状态，客户端收到消息后进入终止等待"),v("code",[s._v("FIN-WAIT-2")]),s._v("状态")]),s._v(" "),v("li",[s._v("第三次挥手：服务器发送释放标识"),v("code",[s._v("FIN=1")]),s._v("信号，确认标志"),v("code",[s._v("ACK=1")]),s._v("，确认序号"),v("code",[s._v("ack=u+1")]),s._v("，自己的序列号"),v("code",[s._v("seq=w")]),s._v("，服务器进入最后确认"),v("code",[s._v("LAST-ACK")]),s._v("状态")]),s._v(" "),v("li",[s._v("第四次挥手：客户端收到回复后，发送确认标志"),v("code",[s._v("ACK=1")]),s._v("，确认序号"),v("code",[s._v("ack=w+1")]),s._v("，自己的序列号"),v("code",[s._v("seq=u+1")]),s._v("，客户端进入时间等待"),v("code",[s._v("TIME-WAIT")]),s._v("状态，经过"),v("code",[s._v("2")]),s._v("个最长报文段寿命后，客户端"),v("code",[s._v("CLOSE")]),s._v("。服务器收到确认后，立刻进入"),v("code",[s._v("CLOSE")]),s._v("状态。")])]),s._v(" "),v("h2",{attrs:{id:"常见问题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#常见问题"}},[s._v("#")]),s._v(" 常见问题")]),s._v(" "),v("h3",{attrs:{id:"为什不能两次握手"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#为什不能两次握手"}},[s._v("#")]),s._v(" 为什不能两次握手")]),s._v(" "),v("p",[v("code",[s._v("TCP")]),s._v("链接握手是通过序列号进行的，也就是"),v("code",[s._v("seq")]),s._v("，"),v("code",[s._v("TCP")]),s._v("需要"),v("code",[s._v("seq")]),s._v("序列号来做可靠重传或接收，而避免连接复用时无法分辨出"),v("code",[s._v("seq")]),s._v("是延迟或者是旧链接的"),v("code",[s._v("seq")]),s._v("，因此需要三次握手来约定确定双方的初始"),v("code",[s._v("seq")]),s._v("序列号，也就是保证序号完成同步确认。\n假如进行两次握手，流程如下，客户端发送起始序列号"),v("code",[s._v("seq=x")]),s._v("到服务端，服务端收到消息后发送确认标识"),v("code",[s._v("ACK=1")]),s._v("与确认号"),v("code",[s._v("ack=x+1")]),s._v("以及自己的序列号"),v("code",[s._v("req=y")]),s._v("，此时服务端认为链接已建立，客户端收到消息后也认为请求已建立。\n考虑到网路中数据延时的情况，假设客户端首先发起了一次链接，此报文在网路中堵塞，此时客户端又发起了一次请求，此时报文更换了路由线路，到达了服务端，服务端此时认为建立链接，并传报文到客户端，数据通信完成后关闭了链接，此时，客户端第一次发送的报文终于到达了服务端，由于两次握手，服务端此时认为建立链接，发送确认标识到客户端，但客户端认定次序列号无效，不建立链接，这就造成了服务端资源的浪费，本不该建立的链接而建立了链接。")]),s._v(" "),v("h3",{attrs:{id:"为什么不要四次握手"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#为什么不要四次握手"}},[s._v("#")]),s._v(" 为什么不要四次握手")]),s._v(" "),v("p",[s._v("当初上课时老师给出的红蓝军问题的例子，也就是两军问题，从通信的可靠性出发，不存在绝对可靠的协议")]),s._v(" "),v("div",{staticClass:"language- line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[s._v("在山的两头是红军1和红军2，山上是蓝军，红军1和2都不是蓝军的对手，想打败蓝军只有一起动手。那么红军1和2需要相互通信才能确定双方在同一个时间动手\n红军1的传令军成功偷偷越过大山告诉红军2，明天早上中午十二点一起动手\n红军2表示赞同，但是红军1并不确定红军2是否收到了消息，贸然动手必定失败，所以需要红军2的传令军越过大山告诉红军1收到了消息\n红军1收到了红军2的确认消息，但此时红军2并不知道红军1是否收到自己的确认消息，所以需要红军1的传令兵越过大山告诉红军2收到了确认消息\n红军2收到了红军1的确认消息，但此时红军1并不知道红军2是否收到自己的确认消息，于是需要红军2的传令兵越过大山告诉红军1收到了确认消息\n......\n")])]),s._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[s._v("1")]),v("br"),v("span",{staticClass:"line-number"},[s._v("2")]),v("br"),v("span",{staticClass:"line-number"},[s._v("3")]),v("br"),v("span",{staticClass:"line-number"},[s._v("4")]),v("br"),v("span",{staticClass:"line-number"},[s._v("5")]),v("br"),v("span",{staticClass:"line-number"},[s._v("6")]),v("br")])]),v("p",[s._v("两军问题最后陷入了一个死循环，这说明永远都不能完美的达成协议，不存在完全可靠的通信协议。而"),v("code",[s._v("TCP")]),s._v("作为一种可靠传输控制协议，既要保证数据可靠传输，又要提高传输的效率，而三次握手的时候已经可以达到一个非常可观的可信率与传输效率，再继续握手虽然能继续提高连接的可信率，但是就像对数"),v("code",[s._v("log")]),s._v("函数曲线，随着握手次数的增加，可靠率增加的并不明显，甚至相对于效率上的消耗，多次握手反而不利于数据的传输。")]),s._v(" "),v("h3",{attrs:{id:"建立连接是三次握手-关闭连接却是四次挥手"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#建立连接是三次握手-关闭连接却是四次挥手"}},[s._v("#")]),s._v(" 建立连接是三次握手，关闭连接却是四次挥手")]),s._v(" "),v("p",[s._v("建立连接的时候， 服务器在"),v("code",[s._v("LISTEN")]),s._v("状态下，收到建立连接请求的"),v("code",[s._v("SYN")]),s._v("报文后，把"),v("code",[s._v("ACK")]),s._v("和"),v("code",[s._v("SYN")]),s._v("放在一个报文里发送给客户端。而关闭连接时，服务器收到对方的"),v("code",[s._v("FIN")]),s._v("报文时，仅仅表示对方不再发送数据了但是还能接收数据，而自己也未必全部数据都发送给对方了，所以己方可以立即关闭，也可以发送一些数据给对方后，再发送"),v("code",[s._v("FIN")]),s._v("报文给对方来表示同意现在关闭连接，因此，己方"),v("code",[s._v("ACK")]),s._v("和"),v("code",[s._v("FIN")]),s._v("一般都会分开发送，从而导致多了一次。")]),s._v(" "),v("h3",{attrs:{id:"客户端最后还要等待2msl"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#客户端最后还要等待2msl"}},[s._v("#")]),s._v(" 客户端最后还要等待2MSL")]),s._v(" "),v("p",[v("code",[s._v("MSL")]),s._v("是"),v("code",[s._v("Maximum Segment Lifetime")]),s._v("，"),v("code",[s._v("TCP")]),s._v("允许不同的实现可以设置不同的"),v("code",[s._v("MSL")]),s._v("值。\n第一，保证客户端发送的最后一个"),v("code",[s._v("ACK")]),s._v("报文能够到达服务器，因为这个"),v("code",[s._v("ACK")]),s._v("报文可能丢失，站在服务器的角度看来，我已经发送了"),v("code",[s._v("FIN+ACK")]),s._v("报文请求断开了，客户端还没有给我回应，应该是我发送的请求断开报文它没有收到，于是服务器又会重新发送一次，而客户端就能在这个"),v("code",[s._v("2MSL")]),s._v("时间段内收到这个重传的报文，接着给出回应报文，并且会重启"),v("code",[s._v("2MSL")]),s._v("计时器。\n第二，防止类似已经失效的连接请求报文段出现在本连接中。客户端发送完最后一个确认报文后，在这个"),v("code",[s._v("2MSL")]),s._v("时间中，就可以使本连接持续的时间内所产生的所有报文段都从网络中消失。这样新的连接中不会出现旧连接的请求报文。")])])}),[],!1,null,null,null);e.default=_.exports}}]);